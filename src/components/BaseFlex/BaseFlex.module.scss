@use "sass:math";
@import '@whirli-components/styles/Breakpoints.module.scss';
@import '@whirli-components/styles/Spacers.scss';

// default styles
.base-flex {
  display: flex;
}

.spacing-none,
.spacing-0 {
  margin: 0;

  > * {
    margin: 0;
  }
}

// @todo spacer maps could be much better and would save repetition (Base Spacer)
.spacing-2xs {
  margin: calc($spacer-2xs / 2 * -1);

  > * {
    margin: calc($spacer-2xs / 2);
  }
}

.spacing-xs {
  margin: calc($spacer-xs / 2 * -1);

  > * {
    margin: calc($spacer-xs / 2);
  }
}

.spacing-sm {
  margin: calc($spacer-sm / 2 * -1);

  > * {
    margin: calc($spacer-sm / 2);
  }
}

.spacing-base{
  margin: calc($spacer-default / 2 * -1);

  > * {
    margin: calc($spacer-default / 2);
  }
}

.spacing-md {
  margin: calc($spacer-md / 2 * -1);

  > * {
    margin: calc($spacer-md / 2);
  }
}

.spacing-lg {
  margin: calc($spacer-lg / 2 * -1);

  > * {
    margin: calc($spacer-lg / 2);
  }
}

.spacing-xl {
  margin: calc($spacer-xl / 2 * -1);

  > * {
    margin: calc($spacer-xl / 2);
  }
}

.spacing-2xl {
  margin: calc($spacer-2xl / 2 * -1);

  > * {
    margin: calc($spacer-2xl / 2);
  }
}

.spacing-3xl {
  margin: calc($spacer-3xl / 2 * -1);

  > * {
    margin: calc($spacer-3xl / 2);
  }
}

.spacing-4xl {
  margin: calc($spacer-4xl / 2 * -1);

  > * {
    margin: calc($spacer-4xl / 2);
  }
}

.spacing-5xl {
  margin: calc($spacer-5xl / 2 * -1);

  > * {
    margin: calc($spacer-5xl / 2);
  }
}

.spacing-6xl {
  margin: calc($spacer-6xl / 2 * -1);

  > * {
    margin: calc($spacer-6xl / 2);
  }
}

.spacing-7xl {
  margin: calc($spacer-7xl / 2 * -1);

  > * {
    margin: calc($spacer-7xl / 2);
  }
}

// breakpoint styles
$package-breakpoint-styles: (
  align-start: (
    align-items: flex-start,
  ),
  align-center: (
    align-items: center,
  ),
  align-end: (
    align-items: flex-end,
  ),
  align-baseline: (
    align-items: baseline,
  ),
  align-stretch: (
    align-items: stretch,
  ),
  align-normal: (
    align-items: normal,
  ),

  justify-center: (
    justify-content: center,
  ),
  justify-left: (
    justify-content: left,
  ),
  justify-right: (
    justify-content: right,
  ),
  justify-between: (
    justify-content: space-between,
  ),
  justify-around: (
    justify-content: space-around,
  ),
  justify-evenly: (
    justify-content: space-evenly,
  ),
  justify-normal: (
    justify-content: normal,
  ),

  direction-row: (
    flex-direction: row
  ),
  direction-row-reverse: (
    flex-direction: row-reverse
  ),
  direction-column: (
    flex-direction: column
  ),
  direction-column-reverse: (
    flex-direction: column-reverse
  ),

  wrap-no-wrap: (
    flex-wrap: nowrap
  ),
  wrap-wrap: (
    flex-wrap: wrap
  ),
  wrap-wrap-reverse: (
    flex-wrap: wrap-reverse
  ),
  wrap-inherit: (
    flex-wrap: inherit
  ),
  wrap-initial: (
    flex-wrap: initial
  ),
  wrap-unset: (
    flex-wrap: unset
  ),

  spans-auto: (
    width: auto
  ),

  spans-1: (
    width: #{math.div(1, 12) * 100}#{'%'}
  ),
  spans-2: (
    width: #{math.div(2, 12) * 100}#{'%'}
  ),
  spans-3: (
    width: #{math.div(3, 12) * 100}#{'%'}
  ),
  spans-4: (
    width: #{math.div(4, 12) * 100}#{'%'}
  ),
  spans-5: (
    width: #{math.div(5, 12) * 100}#{'%'}
  ),
  spans-6: (
    width: #{math.div(6, 12) * 100}#{'%'}
  ),
  spans-7: (
    width: #{math.div(7, 12) * 100}#{'%'}
  ),
  spans-8: (
    width: #{math.div(8, 12) * 100}#{'%'}
  ),
  spans-9: (
    width: #{math.div(9, 12) * 100}#{'%'}
  ),
  spans-10: (
    width: #{math.div(10, 12) * 100}#{'%'}
  ),
  spans-11: (
    width: #{math.div(11, 12) * 100}#{'%'}
  ),
  spans-12: (
    width: 100%
  )
);
